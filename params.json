{
  "name": "Kafka-connect-dynamodb",
  "tagline": "A Kafka Sink Connector that can dump messages from Kafka into AWS DynamoDB table.",
  "body": "# kafka-connect-dynamodb\r\nA Kafka Sink Connector that can dump messages from Kafka into AWS DynamoDB table.\r\n\r\n# Build the Connector\r\nYou can build the connector using Maven lifecycle phases:\r\n```\r\nmvn clean\r\nmvn package\r\n```\r\n\r\n# Sink Connector\r\nWhen the connector is run as Sink, it retrieves messages from Kafka and writes them in DynamoDB table. \r\nThe Sink Task reads the attribute description as defined for the table in AWS configuration.\r\nEach message is then inserted as per the attributes.\r\n\r\n## Sample Configuration\r\n```ini\r\nname=dynamodb-sink-connector\r\nconnector.class=org.apache.kafka.connect.dynamodb.DynamoDBSinkConnector\r\ntasks.max=1\r\ndynamodb.table=sometable\r\ndynamodb.region=us-west-2\r\ntopics=test\r\n```\r\n\r\n* **name**: Name of the connector\r\n* **connector.class**: Name of the class implementation of the connector\r\n* **tasks.max**: Maximum no. of tasks to be created.\r\n* **dynamodb.table**: AWS DynamoDB table name which is already created.\r\n* **dynamodb.region**: AWS Region name (E.g. \"us-west-2\" for Oregon region).\r\n* **topics**: Topic the connector should be listening to.\r\n\r\n# AWS CLI Configuration\r\nMake sure that AWS CLI is configured on the machine.\r\nThe connector uses ProfileCredentialsProvider that will load the default credentials configured for the machine.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}